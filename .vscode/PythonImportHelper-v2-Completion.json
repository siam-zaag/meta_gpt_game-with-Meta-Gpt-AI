[
    {
        "label": "Room",
        "importPath": "rooms",
        "description": "rooms",
        "isExtraImport": true,
        "detail": "rooms",
        "documentation": {}
    },
    {
        "label": "Room",
        "importPath": "rooms",
        "description": "rooms",
        "isExtraImport": true,
        "detail": "rooms",
        "documentation": {}
    },
    {
        "label": "ProductManager",
        "importPath": "product_manager",
        "description": "product_manager",
        "isExtraImport": true,
        "detail": "product_manager",
        "documentation": {}
    },
    {
        "label": "Architect",
        "importPath": "architect",
        "description": "architect",
        "isExtraImport": true,
        "detail": "architect",
        "documentation": {}
    },
    {
        "label": "Engineer",
        "importPath": "engineer",
        "description": "engineer",
        "isExtraImport": true,
        "detail": "engineer",
        "documentation": {}
    },
    {
        "label": "QAEngineer",
        "importPath": "qa_engineer",
        "description": "qa_engineer",
        "isExtraImport": true,
        "detail": "qa_engineer",
        "documentation": {}
    },
    {
        "label": "Room",
        "importPath": "game.rooms",
        "description": "game.rooms",
        "isExtraImport": true,
        "detail": "game.rooms",
        "documentation": {}
    },
    {
        "label": "ProductManager",
        "importPath": "agents.product_manager",
        "description": "agents.product_manager",
        "isExtraImport": true,
        "detail": "agents.product_manager",
        "documentation": {}
    },
    {
        "label": "Architect",
        "importPath": "agents.architect",
        "description": "agents.architect",
        "isExtraImport": true,
        "detail": "agents.architect",
        "documentation": {}
    },
    {
        "label": "Engineer",
        "importPath": "agents.engineer",
        "description": "agents.engineer",
        "isExtraImport": true,
        "detail": "agents.engineer",
        "documentation": {}
    },
    {
        "label": "QAEngineer",
        "importPath": "agents.qa_engineer",
        "description": "agents.qa_engineer",
        "isExtraImport": true,
        "detail": "agents.qa_engineer",
        "documentation": {}
    },
    {
        "label": "Architect",
        "kind": 6,
        "importPath": "game.architect",
        "description": "game.architect",
        "peekOfCode": "class Architect:\n    def add_room(self, game, room_name, room_description, items=None, exits=None):\n        new_room = Room(room_name, room_description, items)\n        game.rooms[room_name] = new_room\n        if exits:\n            new_room.exits = exits\n        print(f\"Room '{room_name}' added to the game.\")",
        "detail": "game.architect",
        "documentation": {}
    },
    {
        "label": "Engineer",
        "kind": 6,
        "importPath": "game.engineer",
        "description": "game.engineer",
        "peekOfCode": "class Engineer:\n    def create_item(self, room, item):\n        room.items.append(item)\n        print(f\"Item '{item}' added to {room.name}.\")",
        "detail": "game.engineer",
        "documentation": {}
    },
    {
        "label": "Game",
        "kind": 6,
        "importPath": "game.game",
        "description": "game.game",
        "peekOfCode": "class Game:\n    def __init__(self):\n        self.rooms = {\n            'Living Room': Room('Living Room', 'A cozy living room with a fireplace.', ['key', 'map']),\n            'Kitchen': Room('Kitchen', 'A kitchen with a strange smell.', ['knife', 'apple']),\n            'Bedroom': Room('Bedroom', 'A peaceful bedroom with a comfortable bed.', ['pillow', 'book'])\n        }\n        self.current_room = self.rooms['Living Room']\n        self.rooms['Living Room'].exits = {'north': self.rooms['Kitchen'], 'east': self.rooms['Bedroom']}\n        self.rooms['Kitchen'].exits = {'south': self.rooms['Living Room']}",
        "detail": "game.game",
        "documentation": {}
    },
    {
        "label": "ProductManager",
        "kind": 6,
        "importPath": "game.product_manager",
        "description": "game.product_manager",
        "peekOfCode": "class ProductManager:\n    def __init__(self):\n        self.quests = []\n    def add_quest(self, quest):\n        self.quests.append(quest)\n        print(f\"New quest added: {quest}\")\n    def list_quests(self):\n        if not self.quests:\n            print(\"No quests available.\")\n        else:",
        "detail": "game.product_manager",
        "documentation": {}
    },
    {
        "label": "QAEngineer",
        "kind": 6,
        "importPath": "game.qa_engineer",
        "description": "game.qa_engineer",
        "peekOfCode": "class QAEngineer:\n    def verify_room(self, room):\n        print(f\"Verifying room '{room.name}'...\")\n        if room.exits:\n            print(\"Exits are present.\")\n        else:\n            print(\"No exits found.\")\n        if room.items:\n            print(\"Items are present.\")\n        else:",
        "detail": "game.qa_engineer",
        "documentation": {}
    },
    {
        "label": "Room",
        "kind": 6,
        "importPath": "game.rooms",
        "description": "game.rooms",
        "peekOfCode": "class Room:\n    def __init__(self, name, description, items=None):\n        self.name = name\n        self.description = description\n        self.items = items if items else []\n        self.exits = {}\n    def describe(self):\n        print(f\"{self.name}\\n{self.description}\")\n        if self.items:\n            print(\"You see the following items:\")",
        "detail": "game.rooms",
        "documentation": {}
    },
    {
        "label": "Game",
        "kind": 6,
        "importPath": "game",
        "description": "game",
        "peekOfCode": "class Game:\n    def __init__(self):\n        self.rooms = {\n            'Living Room': Room('Living Room', 'A cozy living room with a fireplace.', ['key', 'map']),\n            'Kitchen': Room('Kitchen', 'A kitchen with a strange smell.', ['knife', 'apple']),\n            'Bedroom': Room('Bedroom', 'A peaceful bedroom with a comfortable bed.', ['pillow', 'book'])\n        }\n        self.current_room = self.rooms['Living Room']\n        self.rooms['Living Room'].exits = {'north': self.rooms['Kitchen'], 'east': self.rooms['Bedroom']}\n        self.rooms['Kitchen'].exits = {'south': self.rooms['Living Room']}",
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "Room",
        "kind": 6,
        "importPath": "rooms",
        "description": "rooms",
        "peekOfCode": "class Room:\n    def __init__(self, name, description, items=None):\n        self.name = name\n        self.description = description\n        self.items = items if items else []\n        self.exits = {}\n    def describe(self):\n        print(f\"{self.name}\\n{self.description}\")\n        if self.items:\n            print(\"You see the following items:\")",
        "detail": "rooms",
        "documentation": {}
    },
    {
        "label": "Game",
        "kind": 6,
        "importPath": "text_adventure_game",
        "description": "text_adventure_game",
        "peekOfCode": "class Game:\n    def __init__(self):\n        self.rooms = {\n            'Living Room': Room('Living Room', 'A cozy living room with a fireplace.', ['key', 'map']),\n            'Kitchen': Room('Kitchen', 'A kitchen with a strange smell.', ['knife', 'apple']),\n            'Bedroom': Room('Bedroom', 'A peaceful bedroom with a comfortable bed.', ['pillow', 'book']),\n            'Office room': Room('Office room', 'A peaceful Office room with a comfortable table.', ['laptop', 'PC'])\n        }\n        self.current_room = self.rooms['Living Room']\n        # Setting up exits",
        "detail": "text_adventure_game",
        "documentation": {}
    }
]